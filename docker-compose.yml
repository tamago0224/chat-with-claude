services:
  postgres:
    image: postgres:15-alpine
    container_name: chat-postgres
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chat-network

  valkey:
    image: valkey/valkey:7.2-alpine
    container_name: chat-valkey
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    networks:
      - chat-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chat-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=chatapp
      - DB_USER=chatuser
      - DB_PASSWORD=chatpass
      - REDIS_HOST=valkey
      - REDIS_PORT=6379
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=86400
    ports:
      - "8080:8080"
      - "9090:9090"
      - "8081:8081"
    depends_on:
      - postgres
      - valkey
    networks:
      - chat-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chat-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=http://localhost:8081
      - NEXT_PUBLIC_GRPC_URL=http://localhost:9090
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - chat-network

volumes:
  postgres_data:
  valkey_data:

networks:
  chat-network:
    driver: bridge