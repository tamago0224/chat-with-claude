name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile backend
      run: |
        cd backend
        mvn clean compile
        
    - name: Check code formatting
      run: |
        cd backend
        mvn fmt:check
      continue-on-error: false
      
    - name: Run Checkstyle
      run: |
        cd backend
        mvn checkstyle:check
      continue-on-error: true
      
    - name: Run SpotBugs
      run: |
        cd backend
        mvn spotbugs:check
      continue-on-error: true
      
    - name: Run PMD
      run: |
        cd backend
        mvn pmd:check
      continue-on-error: true
      
    - name: Run tests
      run: |
        cd backend
        mvn test
        
    - name: Upload Checkstyle reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: checkstyle-reports
        path: backend/target/checkstyle-*
        
    - name: Upload SpotBugs reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: spotbugs-reports
        path: backend/target/spotbugs*
        
    - name: Upload PMD reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pmd-reports
        path: backend/target/pmd*

  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linter
      run: |
        cd frontend
        npm run lint
        
    - name: Run type check
      run: |
        cd frontend
        npm run type-check
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-quality, frontend-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        tags: chat-backend:test
        
    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: false
        tags: chat-frontend:test